spring.application.name: order-service
spring.kafka.bootstrap-servers: localhost:9092

spring.cloud.function.definition: orderBuySupplier;orderSellSupplier;diffrentvaluesorderBuySupplier;diffrentvaluesorderSellSupplier

#spring.output.ansi.enabled: ALWAYS

spring.cloud.stream.bindings.orderBuySupplier-out-0.destination: orders-buy
spring.cloud.stream.kafka.bindings.orderBuySupplier-out-0.producer.configuration.key.serializer: org.apache.kafka.common.serialization.LongSerializer

spring.cloud.stream.bindings.orderSellSupplier-out-0.destination: orders-sell
spring.cloud.stream.kafka.bindings.orderSellSupplier-out-0.producer.configuration.key.serializer: org.apache.kafka.common.serialization.LongSerializer

spring.cloud.stream.bindings.diffrentvaluesorderBuySupplier-out-0.destination: orders-buy
spring.cloud.stream.kafka.bindings.diffrentvaluesorderBuySupplier-out-0.producer.configuration.key.serializer: org.apache.kafka.common.serialization.LongSerializer

spring.cloud.stream.bindings.diffrentvaluesorderSellSupplier-out-0.destination: orders-sell
spring.cloud.stream.kafka.bindings.diffrentvaluesorderSellSupplier-out-0.producer.configuration.key.serializer: org.apache.kafka.common.serialization.LongSerializer

server.port: 8082

#logging.pattern.console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"